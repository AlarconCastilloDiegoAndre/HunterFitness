# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: üèπ Build and deploy Hunter Fitness API to Azure Functions

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'hunter-fitness-api'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './hunter_fitness_api'  # Ajustar seg√∫n tu estructura
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: üîÑ Checkout GitHub Action
        uses: actions/checkout@v4

      - name: üîß Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: üìÅ List Directory Structure (Debug)
        run: |
          echo "=== Repository Structure ==="
          find . -name "*.csproj" -type f
          echo "=== All directories ==="
          ls -la
          echo "=== Looking for hunter_fitness_api ==="
          ls -la hunter_fitness_api/ || echo "hunter_fitness_api directory not found"

      - name: üì¶ Restore Project Dependencies
        shell: bash
        run: |
          # Buscar el archivo .csproj
          PROJECT_FILE=$(find . -name "*.csproj" -type f | head -1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "‚ùå No .csproj file found!"
            exit 1
          fi
          echo "‚úÖ Found project file: $PROJECT_FILE"
          PROJECT_DIR=$(dirname "$PROJECT_FILE")
          echo "üìÅ Project directory: $PROJECT_DIR"
          
          pushd "$PROJECT_DIR"
          dotnet restore
          popd

      - name: üèóÔ∏è Build Project
        shell: bash
        run: |
          PROJECT_FILE=$(find . -name "*.csproj" -type f | head -1)
          PROJECT_DIR=$(dirname "$PROJECT_FILE")
          
          pushd "$PROJECT_DIR"
          dotnet build --configuration Release --no-restore
          popd

      - name: üìã Publish Project
        shell: bash
        run: |
          PROJECT_FILE=$(find . -name "*.csproj" -type f | head -1)
          PROJECT_DIR=$(dirname "$PROJECT_FILE")
          
          pushd "$PROJECT_DIR"
          dotnet publish --configuration Release --no-build --output ../publish
          popd
          
          echo "=== Published Files ==="
          ls -la publish/

      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E5646C2C00794B93A71D81DC5F9E8D1F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F4990B344EB4421296FED1CE0B6E9620 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7CF3D59C721944028A9DF8BCD01A6CF5 }}

      - name: üöÄ Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './publish'

      - name: ‚úÖ Deployment Success
        run: |
          echo "üéâ Hunter Fitness API deployed successfully!"
          echo "üåê URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
          echo "üè• Health Check: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health"
